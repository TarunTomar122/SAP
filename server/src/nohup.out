yarn run v1.22.15
$ nodemon --exec babel-node src/index.js
[33m[nodemon] 2.0.14[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,json[39m
[32m[nodemon] starting `babel-node src/index.js`[39m
events.js:174
      throw er; // Unhandled 'error' event
      ^

Error: EBADF: bad file descriptor, read
Emitted 'error' event at:
    at lazyFs.read (internal/fs/streams.js:165:12)
    at FSReqWrap.wrapper [as oncomplete] (fs.js:467:17)
error Command failed with exit code 1.
info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.
Executing (default): CREATE TABLE IF NOT EXISTS "people" ("name" VARCHAR(255) NOT NULL , "email" VARCHAR(255), "contacts" INTEGER[], "address" VARCHAR(255), "dob" TIMESTAMP WITH TIME ZONE, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("name"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'people' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): CREATE TABLE IF NOT EXISTS "thoughts" ("id"   SERIAL , "title" VARCHAR(255) NOT NULL, "date" TIMESTAMP WITH TIME ZONE NOT NULL, "thought" TEXT NOT NULL, "rating" INTEGER NOT NULL, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "personName" VARCHAR(255) REFERENCES "people" ("name") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'thoughts' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): CREATE TABLE IF NOT EXISTS "taskInfos" ("taskName" VARCHAR(255) NOT NULL , "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("taskName"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'taskInfos' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): CREATE TABLE IF NOT EXISTS "taskTracks" ("id"  SERIAL , "date" DATE NOT NULL, "count" INTEGER DEFAULT 0, "goal" INTEGER DEFAULT 0, "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "taskInfoTaskName" VARCHAR(255) REFERENCES "taskInfos" ("taskName") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("id"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'taskTracks' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): CREATE TABLE IF NOT EXISTS "tags" ("name" VARCHAR(255) NOT NULL UNIQUE , "createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, PRIMARY KEY ("name"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'tags' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): CREATE TABLE IF NOT EXISTS "peopletag" ("createdAt" TIMESTAMP WITH TIME ZONE NOT NULL, "updatedAt" TIMESTAMP WITH TIME ZONE NOT NULL, "personName" VARCHAR(255)  REFERENCES "people" ("name") ON DELETE CASCADE ON UPDATE CASCADE, "tagName" VARCHAR(255)  REFERENCES "tags" ("name") ON DELETE CASCADE ON UPDATE CASCADE, PRIMARY KEY ("personName","tagName"));
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'peopletag' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Server is running on port 4040
Executing (default): SELECT "id", "date", "count", "goal", "createdAt", "updatedAt", "taskInfoTaskName" FROM "taskTracks" AS "taskTrack" WHERE "taskTrack"."date" = '2021-12-06' ORDER BY "taskTrack"."date" ASC;
Executing (default): SELECT "taskName", "createdAt", "updatedAt" FROM "taskInfos" AS "taskInfo";
Executing (default): SELECT "id", "date", "count", "goal", "createdAt", "updatedAt", "taskInfoTaskName" FROM "taskTracks" AS "taskTrack" WHERE "taskTrack"."date" = '2021-12-06' ORDER BY "taskTrack"."date" ASC;
Executing (default): SELECT "person"."name", "person"."email", "person"."contacts", "person"."address", "person"."dob", "person"."createdAt", "person"."updatedAt", "tags"."name" AS "tags.name", "tags->peopletag"."createdAt" AS "tags.peopletag.createdAt", "tags->peopletag"."updatedAt" AS "tags.peopletag.updatedAt", "tags->peopletag"."personName" AS "tags.peopletag.personName", "tags->peopletag"."tagName" AS "tags.peopletag.tagName" FROM "people" AS "person" LEFT OUTER JOIN ( "peopletag" AS "tags->peopletag" INNER JOIN "tags" AS "tags" ON "tags"."name" = "tags->peopletag"."tagName") ON "person"."name" = "tags->peopletag"."personName";
Executing (default): SELECT "name", "createdAt", "updatedAt" FROM "tags" AS "tag";
Executing (default): INSERT INTO "people" ("name","email","contacts","address","dob","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING *;
{ SequelizeDatabaseError: value "8959350440" is out of range for type integer
    at Query.formatError (/home/azureuser/SAP/server/node_modules/sequelize/lib/dialects/postgres/query.js:366:16)
    at query.catch.err (/home/azureuser/SAP/server/node_modules/sequelize/lib/dialects/postgres/query.js:72:18)
    at tryCatcher (/home/azureuser/SAP/server/node_modules/bluebird/js/release/util.js:16:23)
    at Promise._settlePromiseFromHandler (/home/azureuser/SAP/server/node_modules/bluebird/js/release/promise.js:547:31)
    at Promise._settlePromise (/home/azureuser/SAP/server/node_modules/bluebird/js/release/promise.js:604:18)
    at Promise._settlePromise0 (/home/azureuser/SAP/server/node_modules/bluebird/js/release/promise.js:649:10)
    at Promise._settlePromises (/home/azureuser/SAP/server/node_modules/bluebird/js/release/promise.js:725:18)
    at _drainQueueStep (/home/azureuser/SAP/server/node_modules/bluebird/js/release/async.js:93:12)
    at _drainQueue (/home/azureuser/SAP/server/node_modules/bluebird/js/release/async.js:86:9)
    at Async._drainQueues (/home/azureuser/SAP/server/node_modules/bluebird/js/release/async.js:102:5)
    at Immediate.Async.drainQueues [as _onImmediate] (/home/azureuser/SAP/server/node_modules/bluebird/js/release/async.js:15:14)
    at runCallback (timers.js:705:18)
    at tryOnImmediate (timers.js:676:5)
    at processImmediate (timers.js:658:5)
    at process.topLevelDomainCallback (domain.js:126:23)
  name: 'SequelizeDatabaseError',
  parent:
   { error: value "8959350440" is out of range for type integer
       at Parser.parseErrorMessage (/home/azureuser/SAP/server/node_modules/pg-protocol/src/parser.ts:369:69)
       at Parser.handlePacket (/home/azureuser/SAP/server/node_modules/pg-protocol/src/parser.ts:188:21)
       at Parser.parse (/home/azureuser/SAP/server/node_modules/pg-protocol/src/parser.ts:103:30)
       at Socket.stream.on (/home/azureuser/SAP/server/node_modules/pg-protocol/src/index.ts:7:48)
       at Socket.emit (events.js:198:13)
       at Socket.EventEmitter.emit (domain.js:448:20)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     length: 104,
     name: 'error',
     severity: 'ERROR',
     code: '22003',
     detail: undefined,
     hint: undefined,
     position: undefined,
     internalPosition: undefined,
     internalQuery: undefined,
     where: undefined,
     schema: undefined,
     table: undefined,
     column: undefined,
     dataType: undefined,
     constraint: undefined,
     file: 'numutils.c',
     line: '76',
     routine: 'pg_atoi',
     sql:
      'INSERT INTO "people" ("name","email","contacts","address","dob","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING *;',
     parameters:
      [ 'Tarun ',
        'tomar.4@iitj.ac.in',
        [Array],
        'Near Thatipur police station bajaria chauhan piyahu thatipur gwalior',
        '2001-09-09 00:00:00.000 +00:00',
        '2021-12-06 14:00:50.759 +00:00',
        '2021-12-06 14:00:50.759 +00:00' ] },
  original:
   { error: value "8959350440" is out of range for type integer
       at Parser.parseErrorMessage (/home/azureuser/SAP/server/node_modules/pg-protocol/src/parser.ts:369:69)
       at Parser.handlePacket (/home/azureuser/SAP/server/node_modules/pg-protocol/src/parser.ts:188:21)
       at Parser.parse (/home/azureuser/SAP/server/node_modules/pg-protocol/src/parser.ts:103:30)
       at Socket.stream.on (/home/azureuser/SAP/server/node_modules/pg-protocol/src/index.ts:7:48)
       at Socket.emit (events.js:198:13)
       at Socket.EventEmitter.emit (domain.js:448:20)
       at addChunk (_stream_readable.js:288:12)
       at readableAddChunk (_stream_readable.js:269:11)
       at Socket.Readable.push (_stream_readable.js:224:10)
       at TCP.onStreamRead [as onread] (internal/stream_base_commons.js:94:17)
     length: 104,
     name: 'error',
     severity: 'ERROR',
     code: '22003',
     detail: undefined,
     hint: undefined,
     position: undefined,
     internalPosition: undefined,
     internalQuery: undefined,
     where: undefined,
     schema: undefined,
     table: undefined,
     column: undefined,
     dataType: undefined,
     constraint: undefined,
     file: 'numutils.c',
     line: '76',
     routine: 'pg_atoi',
     sql:
      'INSERT INTO "people" ("name","email","contacts","address","dob","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING *;',
     parameters:
      [ 'Tarun ',
        'tomar.4@iitj.ac.in',
        [Array],
        'Near Thatipur police station bajaria chauhan piyahu thatipur gwalior',
        '2001-09-09 00:00:00.000 +00:00',
        '2021-12-06 14:00:50.759 +00:00',
        '2021-12-06 14:00:50.759 +00:00' ] },
  sql:
   'INSERT INTO "people" ("name","email","contacts","address","dob","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING *;',
  parameters:
   [ 'Tarun ',
     'tomar.4@iitj.ac.in',
     [ '8959350440', '9352280902' ],
     'Near Thatipur police station bajaria chauhan piyahu thatipur gwalior',
     '2001-09-09 00:00:00.000 +00:00',
     '2021-12-06 14:00:50.759 +00:00',
     '2021-12-06 14:00:50.759 +00:00' ] }
